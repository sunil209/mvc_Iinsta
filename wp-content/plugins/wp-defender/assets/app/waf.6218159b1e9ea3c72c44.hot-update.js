webpackHotUpdate("waf",{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./src/module/waf/waf.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/module/waf/waf.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helper_base_hepler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helper/base_hepler */ \"./src/helper/base_hepler.js\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    mixins: [_helper_base_hepler__WEBPACK_IMPORTED_MODULE_0__[\"default\"]],\n    name: \"waf\",\n    data: function data() {\n        return {\n            on_us: waf.waf.hosted,\n            site_id: waf.site_id,\n            status: waf.waf.status,\n            notice: {\n                display: 'none'\n            },\n            state: {\n                on_saving: false\n            },\n            nonces: waf.nonces,\n            endpoints: waf.endpoints\n        };\n    },\n    computed: {\n        get_migrate_url: function get_migrate_url() {\n            return 'https://premium.wpmudev.org/hub2/site/' + this.site_id + '/hosting';\n        },\n        get_waf_url: function get_waf_url() {\n            return 'https://premium.wpmudev.org/hub2/site/' + this.site_id + '/hosting/tools#update-waf';\n        },\n        get_waf_text: function get_waf_text() {\n            return this.vsprintf(this.__('At this time, you can manage all WAF settings via <a target=\"_blank\" href=\"%s\">The Hub.</a>'), 'https://premium.wpmudev.org/hub2/');\n        },\n        get_cached_notice_message: function get_cached_notice_message() {\n            return '<p>' + this.__(\"The status can be cached for 5 minutes, and it's likely the changes you make in the Hub won't be updated in-plugin immediately. You can wait a little bit and re-check again to get the updated status.\") + '</p>';\n        },\n        get_footer_text: function get_footer_text() {\n            if (this.on_us === false) {\n                return this.vsprintf(this.__('You can learn more about the WAF <a target=\"_blank\" href=\"%s\">here.</a>'), 'http://premium.wpmudev.org/waf');\n            } else if (this.on_us === true && this.status === false) {\n                return this.vsprintf(this.__('Enable this feature via <a target=\"_blank\" href=\"%s\">The Hub</a> today or learn more <a target=\"_blank\" href=\"\">here</a>.'), this.get_waf_url, 'http://premium.wpmudev.org/waf');\n            }\n        }\n    },\n    methods: {\n        recheck_status: function recheck_status() {\n            var self = this;\n            this.httpPostRequest('recheck', {}, function (response) {\n                self.status = response.data.waf.status;\n            });\n        },\n        close_notice: function close_notice() {\n            SUI.closeNotice('status-cached');\n        }\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./src/module/waf/waf.vue?vue&type=script&lang=js&\n");

/***/ })

})